# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        SlowPointer=head
        FastPointer=head

        while (SlowPointer!=None and FastPointer!=None and FastPointer.next!=None):
            SlowPointer=SlowPointer.next
            FastPointer=FastPointer.next.next

            if SlowPointer==FastPointer:
                return True
        
        return False
        
